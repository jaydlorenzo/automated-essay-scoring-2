{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/lorenzojayd/aes-2-spell-check?scriptVersionId=176690672\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","id":"7ab3c05e","metadata":{"papermill":{"duration":0.006879,"end_time":"2024-05-09T17:54:35.079207","exception":false,"start_time":"2024-05-09T17:54:35.072328","status":"completed"},"tags":[]},"source":["# Import Dependencies"]},{"cell_type":"markdown","id":"44afbf01","metadata":{"papermill":{"duration":0.005672,"end_time":"2024-05-09T17:54:35.091582","exception":false,"start_time":"2024-05-09T17:54:35.08591","status":"completed"},"tags":[]},"source":["## Libraries"]},{"cell_type":"code","execution_count":1,"id":"f693e4c6","metadata":{"execution":{"iopub.execute_input":"2024-05-09T17:54:35.106047Z","iopub.status.busy":"2024-05-09T17:54:35.105251Z","iopub.status.idle":"2024-05-09T17:55:07.382827Z","shell.execute_reply":"2024-05-09T17:55:07.380885Z"},"papermill":{"duration":32.288035,"end_time":"2024-05-09T17:55:07.385467","exception":false,"start_time":"2024-05-09T17:54:35.097432","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Processing /kaggle/input/pyspellchecker-0-8-1/pyspellchecker-0.8.1-py3-none-any.whl\r\n","Installing collected packages: pyspellchecker\r\n","Successfully installed pyspellchecker-0.8.1\r\n"]}],"source":["!pip install '/kaggle/input/pyspellchecker-0-8-1/pyspellchecker-0.8.1-py3-none-any.whl'"]},{"cell_type":"code","execution_count":2,"id":"d8642782","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-05-09T17:55:07.400979Z","iopub.status.busy":"2024-05-09T17:55:07.400486Z","iopub.status.idle":"2024-05-09T17:55:10.33943Z","shell.execute_reply":"2024-05-09T17:55:10.337998Z"},"papermill":{"duration":2.950527,"end_time":"2024-05-09T17:55:10.342402","exception":false,"start_time":"2024-05-09T17:55:07.391875","status":"completed"},"tags":[]},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import re\n","\n","import nltk\n","from spellchecker import SpellChecker\n","\n","from sklearn.model_selection import train_test_split, RandomizedSearchCV\n","from sklearn.metrics import accuracy_score, cohen_kappa_score, make_scorer\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","\n","from xgboost import XGBClassifier"]},{"cell_type":"markdown","id":"c9239830","metadata":{"papermill":{"duration":0.006027,"end_time":"2024-05-09T17:55:10.356067","exception":false,"start_time":"2024-05-09T17:55:10.35004","status":"completed"},"tags":[]},"source":["## Data"]},{"cell_type":"code","execution_count":3,"id":"55ce206c","metadata":{"execution":{"iopub.execute_input":"2024-05-09T17:55:10.370364Z","iopub.status.busy":"2024-05-09T17:55:10.369735Z","iopub.status.idle":"2024-05-09T17:55:11.142928Z","shell.execute_reply":"2024-05-09T17:55:11.141785Z"},"papermill":{"duration":0.783307,"end_time":"2024-05-09T17:55:11.145617","exception":false,"start_time":"2024-05-09T17:55:10.36231","status":"completed"},"tags":[]},"outputs":[],"source":["data_train = pd.read_csv('/kaggle/input/learning-agency-lab-automated-essay-scoring-2/train.csv')\n","data_test = pd.read_csv('/kaggle/input/learning-agency-lab-automated-essay-scoring-2/test.csv')\n","sample_submission = pd.read_csv('/kaggle/input/learning-agency-lab-automated-essay-scoring-2/sample_submission.csv')"]},{"cell_type":"markdown","id":"89f67bfc","metadata":{"papermill":{"duration":0.006155,"end_time":"2024-05-09T17:55:11.159828","exception":false,"start_time":"2024-05-09T17:55:11.153673","status":"completed"},"tags":[]},"source":["# A quick look at the data"]},{"cell_type":"code","execution_count":4,"id":"78922eee","metadata":{"execution":{"iopub.execute_input":"2024-05-09T17:55:11.174684Z","iopub.status.busy":"2024-05-09T17:55:11.174294Z","iopub.status.idle":"2024-05-09T17:55:11.257402Z","shell.execute_reply":"2024-05-09T17:55:11.255874Z"},"papermill":{"duration":0.093647,"end_time":"2024-05-09T17:55:11.260003","exception":false,"start_time":"2024-05-09T17:55:11.166356","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Train data\n"]},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>essay_id</th>\n","      <th>full_text</th>\n","      <th>score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>000d118</td>\n","      <td>Many people have car where they live. The thin...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>000fe60</td>\n","      <td>I am a scientist at NASA that is discussing th...</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  essay_id                                          full_text  score\n","0  000d118  Many people have car where they live. The thin...      3\n","1  000fe60  I am a scientist at NASA that is discussing th...      3"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 17307 entries, 0 to 17306\n","Data columns (total 3 columns):\n"," #   Column     Non-Null Count  Dtype \n","---  ------     --------------  ----- \n"," 0   essay_id   17307 non-null  object\n"," 1   full_text  17307 non-null  object\n"," 2   score      17307 non-null  int64 \n","dtypes: int64(1), object(2)\n","memory usage: 405.8+ KB\n"]},{"data":{"text/plain":["None"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["---------------------------------------------------------------------------\n","\n","Test data\n"]},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>essay_id</th>\n","      <th>full_text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>000d118</td>\n","      <td>Many people have car where they live. The thin...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>000fe60</td>\n","      <td>I am a scientist at NASA that is discussing th...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>001ab80</td>\n","      <td>People always wish they had the same technolog...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  essay_id                                          full_text\n","0  000d118  Many people have car where they live. The thin...\n","1  000fe60  I am a scientist at NASA that is discussing th...\n","2  001ab80  People always wish they had the same technolog..."]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3 entries, 0 to 2\n","Data columns (total 2 columns):\n"," #   Column     Non-Null Count  Dtype \n","---  ------     --------------  ----- \n"," 0   essay_id   3 non-null      object\n"," 1   full_text  3 non-null      object\n","dtypes: object(2)\n","memory usage: 176.0+ bytes\n"]},{"data":{"text/plain":["None"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["---------------------------------------------------------------------------\n","\n","Sample submission file\n"]},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>essay_id</th>\n","      <th>score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>000d118</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>000fe60</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  essay_id  score\n","0  000d118      3\n","1  000fe60      3"]},"metadata":{},"output_type":"display_data"}],"source":["# Train data summary\n","print('Train data')\n","display(data_train.head(2))\n","display(data_train.info())\n","print('-' * 75)\n","\n","# Test data summary\n","print('\\nTest data')\n","display(data_test.head())\n","display(data_test.info())\n","print('-' * 75)\n","\n","# Sample submission file\n","print('\\nSample submission file')\n","display(sample_submission.head(2))"]},{"cell_type":"markdown","id":"58384f64","metadata":{"papermill":{"duration":0.006739,"end_time":"2024-05-09T17:55:11.274282","exception":false,"start_time":"2024-05-09T17:55:11.267543","status":"completed"},"tags":[]},"source":["# Data Wrangling"]},{"cell_type":"markdown","id":"c9050394","metadata":{"papermill":{"duration":0.006868,"end_time":"2024-05-09T17:55:11.288227","exception":false,"start_time":"2024-05-09T17:55:11.281359","status":"completed"},"tags":[]},"source":["## Preprocessing\n","Partially inspired by: https://www.kaggle.com/code/ye11725/tfidf-lgbm-baseline-cv-0-799-lb-0-799"]},{"cell_type":"code","execution_count":5,"id":"30a1be7c","metadata":{"execution":{"iopub.execute_input":"2024-05-09T17:55:11.305032Z","iopub.status.busy":"2024-05-09T17:55:11.303989Z","iopub.status.idle":"2024-05-09T17:55:11.311399Z","shell.execute_reply":"2024-05-09T17:55:11.310167Z"},"papermill":{"duration":0.018438,"end_time":"2024-05-09T17:55:11.313775","exception":false,"start_time":"2024-05-09T17:55:11.295337","status":"completed"},"tags":[]},"outputs":[],"source":["def removeHTML(text):\n","    html = re.compile(r'<.*?>')\n","    return html.sub(r'', text)\n","\n","def preprocess(text):\n","    # Transform all characters into lowercase\n","    text = text.lower()\n","    # Remove HTML\n","    text = removeHTML(text)\n","    # Remove numbers\n","    text = re.sub(\"'\\d+|\\d+\", '', text)\n","    # Replace repeating spaces and punctuation with one character\n","    text = re.sub(r\"\\s+\", \" \", text)\n","    text = re.sub(r\"\\.+\", \".\", text)\n","    text = re.sub(r\"\\,\", \",\", text)\n","    # Remove URL strings\n","    text = re.sub(\"http\\w+\", '', text)\n","    # Replace non-breaking space with space\n","    text = re.sub(u'\\xa0', u' ', text)\n","    # Remove leading and trailing whitespaces after other transformations\n","    text = text.strip()\n","    return text"]},{"cell_type":"code","execution_count":6,"id":"79b3da36","metadata":{"execution":{"iopub.execute_input":"2024-05-09T17:55:11.330542Z","iopub.status.busy":"2024-05-09T17:55:11.329974Z","iopub.status.idle":"2024-05-09T17:55:14.768347Z","shell.execute_reply":"2024-05-09T17:55:14.767523Z"},"papermill":{"duration":3.449764,"end_time":"2024-05-09T17:55:14.770867","exception":false,"start_time":"2024-05-09T17:55:11.321103","status":"completed"},"tags":[]},"outputs":[],"source":["# Preprocess data\n","df_train = data_train.copy()\n","df_train['full_text'] = data_train['full_text'].apply(lambda text: preprocess(text))\n","\n","df_test = data_test.copy()\n","df_test['full_text'] = data_test['full_text'].apply(lambda text: preprocess(text))\n","\n","# Label encoding the target feature\n","enc = LabelEncoder()\n","df_train['score_encoded'] = enc.fit_transform(df_train['score'])"]},{"cell_type":"code","execution_count":7,"id":"f4c7fdcb","metadata":{"execution":{"iopub.execute_input":"2024-05-09T17:55:14.786123Z","iopub.status.busy":"2024-05-09T17:55:14.785781Z","iopub.status.idle":"2024-05-09T17:55:14.810694Z","shell.execute_reply":"2024-05-09T17:55:14.810011Z"},"papermill":{"duration":0.034598,"end_time":"2024-05-09T17:55:14.812478","exception":false,"start_time":"2024-05-09T17:55:14.77788","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>essay_id</th>\n","      <th>full_text</th>\n","      <th>score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>000d118</td>\n","      <td>Many people have car where they live. The thin...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>000fe60</td>\n","      <td>I am a scientist at NASA that is discussing th...</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  essay_id                                          full_text  score\n","0  000d118  Many people have car where they live. The thin...      3\n","1  000fe60  I am a scientist at NASA that is discussing th...      3"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>essay_id</th>\n","      <th>full_text</th>\n","      <th>score</th>\n","      <th>score_encoded</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>000d118</td>\n","      <td>many people have car where they live. the thin...</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>000fe60</td>\n","      <td>i am a scientist at nasa that is discussing th...</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  essay_id                                          full_text  score  \\\n","0  000d118  many people have car where they live. the thin...      3   \n","1  000fe60  i am a scientist at nasa that is discussing th...      3   \n","\n","   score_encoded  \n","0              2  \n","1              2  "]},"metadata":{},"output_type":"display_data"},{"data":{"text/plain":["score\n","3    6280\n","2    4723\n","4    3926\n","1    1252\n","5     970\n","6     156\n","Name: count, dtype: int64"]},"metadata":{},"output_type":"display_data"},{"data":{"text/plain":["score_encoded\n","2    6280\n","1    4723\n","3    3926\n","0    1252\n","4     970\n","5     156\n","Name: count, dtype: int64"]},"metadata":{},"output_type":"display_data"}],"source":["# Compare original train data with the new train dataframe\n","display(data_train.head(2))\n","display(df_train.head(2))\n","\n","display(data_train['score'].value_counts())\n","display(df_train['score_encoded'].value_counts())"]},{"cell_type":"markdown","id":"27ea117c","metadata":{"papermill":{"duration":0.007704,"end_time":"2024-05-09T17:55:14.827669","exception":false,"start_time":"2024-05-09T17:55:14.819965","status":"completed"},"tags":[]},"source":["## Feature Engineering"]},{"cell_type":"code","execution_count":8,"id":"24130532","metadata":{"execution":{"iopub.execute_input":"2024-05-09T17:55:14.844723Z","iopub.status.busy":"2024-05-09T17:55:14.844061Z","iopub.status.idle":"2024-05-09T17:55:14.852946Z","shell.execute_reply":"2024-05-09T17:55:14.851215Z"},"papermill":{"duration":0.020302,"end_time":"2024-05-09T17:55:14.85534","exception":false,"start_time":"2024-05-09T17:55:14.835038","status":"completed"},"tags":[]},"outputs":[],"source":["def feature_engineer(df):\n","    # Initialize spell checker\n","    spell = SpellChecker()\n","    \n","    # Separating the original full text into paragraphs\n","    df['paragraph'] = df['full_text'].apply(lambda text: text.split('\\n\\n'))\n","    # Separating the original full text into sentences\n","    df['sentence'] = df['full_text'].apply(lambda text: nltk.tokenize.sent_tokenize(text))\n","    # Obtain tokens\n","    df['word'] = df['full_text'].apply(lambda text: nltk.tokenize.word_tokenize(text))\n","    \n","    # Counts the number of paragraphs\n","    df['paragraph_count'] = df['paragraph'].apply(lambda x: len(x))\n","    # Counts the number of sentences\n","    df['sentence_count'] = df['sentence'].apply(lambda x: len(x))\n","    # Counts the number of words\n","    df['word_count'] = df['word'].apply(lambda x: len(x))\n","    # Counts the number of characters\n","    df['character_count'] = df['full_text'].apply(lambda x: len(x))\n","    # Counts the misspelled words\n","    df['misspelled_count'] = df['word'].apply(lambda x: len(spell.unknown(x)))\n","    \n","    return df.drop(columns = ['paragraph', 'sentence', 'word'])\n"]},{"cell_type":"code","execution_count":9,"id":"25bab23e","metadata":{"execution":{"iopub.execute_input":"2024-05-09T17:55:14.872845Z","iopub.status.busy":"2024-05-09T17:55:14.872397Z","iopub.status.idle":"2024-05-09T17:56:18.03881Z","shell.execute_reply":"2024-05-09T17:56:18.037498Z"},"papermill":{"duration":63.178578,"end_time":"2024-05-09T17:56:18.041303","exception":false,"start_time":"2024-05-09T17:55:14.862725","status":"completed"},"tags":[]},"outputs":[],"source":["## Feature engineering on the train and test data\n","df_train = feature_engineer(df_train)\n","df_test = feature_engineer(df_test)"]},{"cell_type":"markdown","id":"48a343d4","metadata":{"papermill":{"duration":0.00735,"end_time":"2024-05-09T17:56:18.056376","exception":false,"start_time":"2024-05-09T17:56:18.049026","status":"completed"},"tags":[]},"source":["## TF-IDF Vectorization"]},{"cell_type":"code","execution_count":10,"id":"c0d3c226","metadata":{"execution":{"iopub.execute_input":"2024-05-09T17:56:18.074599Z","iopub.status.busy":"2024-05-09T17:56:18.072962Z","iopub.status.idle":"2024-05-09T17:56:22.175257Z","shell.execute_reply":"2024-05-09T17:56:22.1736Z"},"papermill":{"duration":4.113746,"end_time":"2024-05-09T17:56:22.177835","exception":false,"start_time":"2024-05-09T17:56:18.064089","status":"completed"},"tags":[]},"outputs":[],"source":["# Initialize TF-IDF Vectorizer\n","vec = TfidfVectorizer(strip_accents = 'unicode',\n","                      analyzer = 'word',\n","                      min_df = 0.05,\n","                      max_df = 0.95,\n","                      sublinear_tf = True,\n","                      max_features = None,\n","                     )\n","\n","# Train data\n","tfidf_train = vec.fit_transform([i for i in df_train['full_text']])\n","tfidf_train_arr = tfidf_train.toarray()\n","df_tfidf_train = pd.DataFrame(tfidf_train_arr)\n","\n","# Test data\n","tfidf_test = vec.transform([i for i in df_test['full_text']])\n","tfidf_test_arr = tfidf_test.toarray()\n","df_tfidf_test = pd.DataFrame(tfidf_test_arr)\n","\n","# Combining all of the new features\n","df_train = pd.concat([df_train, df_tfidf_train], axis = 1)\n","df_test = pd.concat([df_test, df_tfidf_test], axis = 1)"]},{"cell_type":"code","execution_count":11,"id":"a2150e20","metadata":{"execution":{"iopub.execute_input":"2024-05-09T17:56:22.193921Z","iopub.status.busy":"2024-05-09T17:56:22.193566Z","iopub.status.idle":"2024-05-09T17:56:22.286814Z","shell.execute_reply":"2024-05-09T17:56:22.285404Z"},"papermill":{"duration":0.103694,"end_time":"2024-05-09T17:56:22.288925","exception":false,"start_time":"2024-05-09T17:56:22.185231","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>essay_id</th>\n","      <th>full_text</th>\n","      <th>score</th>\n","      <th>score_encoded</th>\n","      <th>paragraph_count</th>\n","      <th>sentence_count</th>\n","      <th>word_count</th>\n","      <th>character_count</th>\n","      <th>misspelled_count</th>\n","      <th>0</th>\n","      <th>...</th>\n","      <th>614</th>\n","      <th>615</th>\n","      <th>616</th>\n","      <th>617</th>\n","      <th>618</th>\n","      <th>619</th>\n","      <th>620</th>\n","      <th>621</th>\n","      <th>622</th>\n","      <th>623</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>000d118</td>\n","      <td>many people have car where they live. the thin...</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>13</td>\n","      <td>539</td>\n","      <td>2640</td>\n","      <td>27</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.084513</td>\n","      <td>0.068437</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.099545</td>\n","      <td>0.050971</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>000fe60</td>\n","      <td>i am a scientist at nasa that is discussing th...</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>21</td>\n","      <td>371</td>\n","      <td>1663</td>\n","      <td>12</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.078426</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.105819</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>001ab80</td>\n","      <td>people always wish they had the same technolog...</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>24</td>\n","      <td>605</td>\n","      <td>3065</td>\n","      <td>12</td>\n","      <td>0.050198</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.031816</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3 rows × 633 columns</p>\n","</div>"],"text/plain":["  essay_id                                          full_text  score  \\\n","0  000d118  many people have car where they live. the thin...      3   \n","1  000fe60  i am a scientist at nasa that is discussing th...      3   \n","2  001ab80  people always wish they had the same technolog...      4   \n","\n","   score_encoded  paragraph_count  sentence_count  word_count  \\\n","0              2                1              13         539   \n","1              2                1              21         371   \n","2              3                1              24         605   \n","\n","   character_count  misspelled_count         0  ...  614       615  616  617  \\\n","0             2640                27  0.000000  ...  0.0  0.000000  0.0  0.0   \n","1             1663                12  0.000000  ...  0.0  0.078426  0.0  0.0   \n","2             3065                12  0.050198  ...  0.0  0.000000  0.0  0.0   \n","\n","        618       619  620  621       622       623  \n","0  0.084513  0.068437  0.0  0.0  0.099545  0.050971  \n","1  0.000000  0.000000  0.0  0.0  0.105819  0.000000  \n","2  0.000000  0.000000  0.0  0.0  0.031816  0.000000  \n","\n","[3 rows x 633 columns]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 17307 entries, 0 to 17306\n","Columns: 633 entries, essay_id to 623\n","dtypes: float64(624), int64(7), object(2)\n","memory usage: 83.6+ MB\n"]},{"data":{"text/plain":["None"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["------------------------------------------------------------------------------------------------------------------------------------------------------\n"]},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>essay_id</th>\n","      <th>full_text</th>\n","      <th>paragraph_count</th>\n","      <th>sentence_count</th>\n","      <th>word_count</th>\n","      <th>character_count</th>\n","      <th>misspelled_count</th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>...</th>\n","      <th>614</th>\n","      <th>615</th>\n","      <th>616</th>\n","      <th>617</th>\n","      <th>618</th>\n","      <th>619</th>\n","      <th>620</th>\n","      <th>621</th>\n","      <th>622</th>\n","      <th>623</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>000d118</td>\n","      <td>many people have car where they live. the thin...</td>\n","      <td>1</td>\n","      <td>13</td>\n","      <td>539</td>\n","      <td>2640</td>\n","      <td>27</td>\n","      <td>0.000000</td>\n","      <td>0.039362</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.084513</td>\n","      <td>0.068437</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.099545</td>\n","      <td>0.050971</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>000fe60</td>\n","      <td>i am a scientist at nasa that is discussing th...</td>\n","      <td>1</td>\n","      <td>21</td>\n","      <td>371</td>\n","      <td>1663</td>\n","      <td>12</td>\n","      <td>0.000000</td>\n","      <td>0.075796</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.078426</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.105819</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>001ab80</td>\n","      <td>people always wish they had the same technolog...</td>\n","      <td>1</td>\n","      <td>24</td>\n","      <td>605</td>\n","      <td>3065</td>\n","      <td>12</td>\n","      <td>0.050198</td>\n","      <td>0.059467</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.031816</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3 rows × 631 columns</p>\n","</div>"],"text/plain":["  essay_id                                          full_text  \\\n","0  000d118  many people have car where they live. the thin...   \n","1  000fe60  i am a scientist at nasa that is discussing th...   \n","2  001ab80  people always wish they had the same technolog...   \n","\n","   paragraph_count  sentence_count  word_count  character_count  \\\n","0                1              13         539             2640   \n","1                1              21         371             1663   \n","2                1              24         605             3065   \n","\n","   misspelled_count         0         1    2  ...  614       615  616  617  \\\n","0                27  0.000000  0.039362  0.0  ...  0.0  0.000000  0.0  0.0   \n","1                12  0.000000  0.075796  0.0  ...  0.0  0.078426  0.0  0.0   \n","2                12  0.050198  0.059467  0.0  ...  0.0  0.000000  0.0  0.0   \n","\n","        618       619  620  621       622       623  \n","0  0.084513  0.068437  0.0  0.0  0.099545  0.050971  \n","1  0.000000  0.000000  0.0  0.0  0.105819  0.000000  \n","2  0.000000  0.000000  0.0  0.0  0.031816  0.000000  \n","\n","[3 rows x 631 columns]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3 entries, 0 to 2\n","Columns: 631 entries, essay_id to 623\n","dtypes: float64(624), int64(5), object(2)\n","memory usage: 14.9+ KB\n"]},{"data":{"text/plain":["None"]},"metadata":{},"output_type":"display_data"}],"source":["display(df_train.head(3))\n","display(df_train.info())\n","print('-' * 150)\n","display(df_test.head())\n","display(df_test.info())"]},{"cell_type":"code","execution_count":12,"id":"0122aecf","metadata":{"execution":{"iopub.execute_input":"2024-05-09T17:56:22.308847Z","iopub.status.busy":"2024-05-09T17:56:22.308205Z","iopub.status.idle":"2024-05-09T17:56:22.400945Z","shell.execute_reply":"2024-05-09T17:56:22.399012Z"},"papermill":{"duration":0.10623,"end_time":"2024-05-09T17:56:22.404155","exception":false,"start_time":"2024-05-09T17:56:22.297925","status":"completed"},"tags":[]},"outputs":[],"source":["# Separating train data into independent features (X) and target feature (y)\n","X = df_train.drop(columns = ['essay_id', 'full_text', 'score', 'score_encoded'])\n","y = df_train['score_encoded']\n","\n","# Splitting train data into training and validation splits\n","X_train, X_val, y_train, y_val = train_test_split(X, y, test_size = 0.2, random_state = 0)\n","\n","# Obtaining X features from test data\n","X_test = df_test.drop(columns = ['essay_id', 'full_text'])"]},{"cell_type":"markdown","id":"6dd7675a","metadata":{"execution":{"iopub.execute_input":"2024-05-09T09:03:10.689168Z","iopub.status.busy":"2024-05-09T09:03:10.687968Z","iopub.status.idle":"2024-05-09T09:03:10.694544Z","shell.execute_reply":"2024-05-09T09:03:10.692908Z","shell.execute_reply.started":"2024-05-09T09:03:10.689129Z"},"papermill":{"duration":0.008715,"end_time":"2024-05-09T17:56:22.422412","exception":false,"start_time":"2024-05-09T17:56:22.413697","status":"completed"},"tags":[]},"source":["# Model Training"]},{"cell_type":"code","execution_count":13,"id":"d960fb58","metadata":{"execution":{"iopub.execute_input":"2024-05-09T17:56:22.442607Z","iopub.status.busy":"2024-05-09T17:56:22.442175Z","iopub.status.idle":"2024-05-09T18:26:13.381835Z","shell.execute_reply":"2024-05-09T18:26:13.380712Z"},"papermill":{"duration":1790.963882,"end_time":"2024-05-09T18:26:13.395359","exception":false,"start_time":"2024-05-09T17:56:22.431477","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Fitting 3 folds for each of 10 candidates, totalling 30 fits\n","[CV] END ...learning_rate=0.4, max_depth=5, n_estimators=300; total time= 1.7min\n","[CV] END ...learning_rate=0.4, max_depth=5, n_estimators=300; total time= 1.6min\n","[CV] END ...learning_rate=0.4, max_depth=5, n_estimators=300; total time= 1.6min\n","[CV] END ....learning_rate=0.5, max_depth=5, n_estimators=10; total time=   4.2s\n","[CV] END ....learning_rate=0.5, max_depth=5, n_estimators=10; total time=   4.1s\n","[CV] END ....learning_rate=0.5, max_depth=5, n_estimators=10; total time=   4.1s\n","[CV] END ..learning_rate=0.05, max_depth=5, n_estimators=100; total time=  39.6s\n","[CV] END ..learning_rate=0.05, max_depth=5, n_estimators=100; total time=  39.4s\n","[CV] END ..learning_rate=0.05, max_depth=5, n_estimators=100; total time=  38.4s\n","[CV] END ...learning_rate=0.25, max_depth=5, n_estimators=10; total time=   4.3s\n","[CV] END ...learning_rate=0.25, max_depth=5, n_estimators=10; total time=   4.3s\n","[CV] END ...learning_rate=0.25, max_depth=5, n_estimators=10; total time=   5.0s\n","[CV] END ...learning_rate=0.01, max_depth=5, n_estimators=10; total time=   4.3s\n","[CV] END ...learning_rate=0.01, max_depth=5, n_estimators=10; total time=   4.4s\n","[CV] END ...learning_rate=0.01, max_depth=5, n_estimators=10; total time=   4.2s\n","[CV] END ..learning_rate=0.25, max_depth=3, n_estimators=300; total time=  59.2s\n","[CV] END ..learning_rate=0.25, max_depth=3, n_estimators=300; total time=  58.7s\n","[CV] END ..learning_rate=0.25, max_depth=3, n_estimators=300; total time= 1.0min\n","[CV] END ..learning_rate=0.05, max_depth=8, n_estimators=300; total time= 3.3min\n","[CV] END ..learning_rate=0.05, max_depth=8, n_estimators=300; total time= 3.4min\n","[CV] END ..learning_rate=0.05, max_depth=8, n_estimators=300; total time= 3.4min\n","[CV] END ..learning_rate=0.05, max_depth=3, n_estimators=300; total time= 1.1min\n","[CV] END ..learning_rate=0.05, max_depth=3, n_estimators=300; total time= 1.1min\n","[CV] END ..learning_rate=0.05, max_depth=3, n_estimators=300; total time= 1.1min\n","[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=  37.1s\n","[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=  37.3s\n","[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=  37.2s\n","[CV] END ...learning_rate=0.15, max_depth=3, n_estimators=10; total time=   2.6s\n","[CV] END ...learning_rate=0.15, max_depth=3, n_estimators=10; total time=   2.5s\n","[CV] END ...learning_rate=0.15, max_depth=3, n_estimators=10; total time=   2.7s\n"]},{"data":{"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomizedSearchCV(cv=3,\n","                   estimator=XGBClassifier(base_score=None, booster=None,\n","                                           callbacks=None,\n","                                           colsample_bylevel=None,\n","                                           colsample_bynode=None,\n","                                           colsample_bytree=None, device=None,\n","                                           early_stopping_rounds=None,\n","                                           enable_categorical=False,\n","                                           eval_metric=None, feature_types=None,\n","                                           gamma=None, grow_policy=None,\n","                                           importance_type=None,\n","                                           interaction_constraints=None,\n","                                           learning_rate...\n","                                           max_leaves=None,\n","                                           min_child_weight=None, missing=nan,\n","                                           monotone_constraints=None,\n","                                           multi_strategy=None,\n","                                           n_estimators=None, n_jobs=None,\n","                                           num_parallel_tree=None,\n","                                           random_state=None, ...),\n","                   param_distributions={&#x27;learning_rate&#x27;: [0.01, 0.05, 0.1, 0.15,\n","                                                          0.2, 0.25, 0.3, 0.35,\n","                                                          0.4, 0.5],\n","                                        &#x27;max_depth&#x27;: [3, 5, 8, 10],\n","                                        &#x27;n_estimators&#x27;: [10, 100, 300]},\n","                   scoring=make_scorer(cohen_kappa_score), verbose=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomizedSearchCV</label><div class=\"sk-toggleable__content\"><pre>RandomizedSearchCV(cv=3,\n","                   estimator=XGBClassifier(base_score=None, booster=None,\n","                                           callbacks=None,\n","                                           colsample_bylevel=None,\n","                                           colsample_bynode=None,\n","                                           colsample_bytree=None, device=None,\n","                                           early_stopping_rounds=None,\n","                                           enable_categorical=False,\n","                                           eval_metric=None, feature_types=None,\n","                                           gamma=None, grow_policy=None,\n","                                           importance_type=None,\n","                                           interaction_constraints=None,\n","                                           learning_rate...\n","                                           max_leaves=None,\n","                                           min_child_weight=None, missing=nan,\n","                                           monotone_constraints=None,\n","                                           multi_strategy=None,\n","                                           n_estimators=None, n_jobs=None,\n","                                           num_parallel_tree=None,\n","                                           random_state=None, ...),\n","                   param_distributions={&#x27;learning_rate&#x27;: [0.01, 0.05, 0.1, 0.15,\n","                                                          0.2, 0.25, 0.3, 0.35,\n","                                                          0.4, 0.5],\n","                                        &#x27;max_depth&#x27;: [3, 5, 8, 10],\n","                                        &#x27;n_estimators&#x27;: [10, 100, 300]},\n","                   scoring=make_scorer(cohen_kappa_score), verbose=2)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: XGBClassifier</label><div class=\"sk-toggleable__content\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n","              colsample_bylevel=None, colsample_bynode=None,\n","              colsample_bytree=None, device=None, early_stopping_rounds=None,\n","              enable_categorical=False, eval_metric=None, feature_types=None,\n","              gamma=None, grow_policy=None, importance_type=None,\n","              interaction_constraints=None, learning_rate=None, max_bin=None,\n","              max_cat_threshold=None, max_cat_to_onehot=None,\n","              max_delta_step=None, max_depth=None, max_leaves=None,\n","              min_child_weight=None, missing=nan, monotone_constraints=None,\n","              multi_strategy=None, n_estimators=None, n_jobs=None,\n","              num_parallel_tree=None, random_state=None, ...)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">XGBClassifier</label><div class=\"sk-toggleable__content\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n","              colsample_bylevel=None, colsample_bynode=None,\n","              colsample_bytree=None, device=None, early_stopping_rounds=None,\n","              enable_categorical=False, eval_metric=None, feature_types=None,\n","              gamma=None, grow_policy=None, importance_type=None,\n","              interaction_constraints=None, learning_rate=None, max_bin=None,\n","              max_cat_threshold=None, max_cat_to_onehot=None,\n","              max_delta_step=None, max_depth=None, max_leaves=None,\n","              min_child_weight=None, missing=nan, monotone_constraints=None,\n","              multi_strategy=None, n_estimators=None, n_jobs=None,\n","              num_parallel_tree=None, random_state=None, ...)</pre></div></div></div></div></div></div></div></div></div></div>"],"text/plain":["RandomizedSearchCV(cv=3,\n","                   estimator=XGBClassifier(base_score=None, booster=None,\n","                                           callbacks=None,\n","                                           colsample_bylevel=None,\n","                                           colsample_bynode=None,\n","                                           colsample_bytree=None, device=None,\n","                                           early_stopping_rounds=None,\n","                                           enable_categorical=False,\n","                                           eval_metric=None, feature_types=None,\n","                                           gamma=None, grow_policy=None,\n","                                           importance_type=None,\n","                                           interaction_constraints=None,\n","                                           learning_rate...\n","                                           max_leaves=None,\n","                                           min_child_weight=None, missing=nan,\n","                                           monotone_constraints=None,\n","                                           multi_strategy=None,\n","                                           n_estimators=None, n_jobs=None,\n","                                           num_parallel_tree=None,\n","                                           random_state=None, ...),\n","                   param_distributions={'learning_rate': [0.01, 0.05, 0.1, 0.15,\n","                                                          0.2, 0.25, 0.3, 0.35,\n","                                                          0.4, 0.5],\n","                                        'max_depth': [3, 5, 8, 10],\n","                                        'n_estimators': [10, 100, 300]},\n","                   scoring=make_scorer(cohen_kappa_score), verbose=2)"]},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":["# Making the cohen kappa scorer\n","kappa_scorer = make_scorer(cohen_kappa_score)\n","\n","# Random search parameters\n","params = {\n","    'n_estimators': [10, 100, 300],\n","    'max_depth': [3, 5, 8, 10],\n","    'learning_rate': [0.01, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.5],\n","}\n","\n","clf = RandomizedSearchCV(XGBClassifier(), param_distributions = params, cv = 3, scoring = kappa_scorer, verbose = 2)\n","clf.fit(X_train, y_train)"]},{"cell_type":"code","execution_count":14,"id":"dff3ba8a","metadata":{"execution":{"iopub.execute_input":"2024-05-09T18:26:13.475592Z","iopub.status.busy":"2024-05-09T18:26:13.475246Z","iopub.status.idle":"2024-05-09T18:26:13.482278Z","shell.execute_reply":"2024-05-09T18:26:13.481643Z"},"papermill":{"duration":0.020354,"end_time":"2024-05-09T18:26:13.484053","exception":false,"start_time":"2024-05-09T18:26:13.463699","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Best parameters: {'n_estimators': 300, 'max_depth': 8, 'learning_rate': 0.05}\n","Best score: 0.4454206752220476\n"]}],"source":["print('Best parameters:', clf.best_params_)\n","print('Best score:', clf.best_score_)"]},{"cell_type":"markdown","id":"38507c77","metadata":{"papermill":{"duration":0.010327,"end_time":"2024-05-09T18:26:13.504797","exception":false,"start_time":"2024-05-09T18:26:13.49447","status":"completed"},"tags":[]},"source":["# Model Evaluation"]},{"cell_type":"code","execution_count":15,"id":"9b1a7ba0","metadata":{"execution":{"iopub.execute_input":"2024-05-09T18:26:13.527979Z","iopub.status.busy":"2024-05-09T18:26:13.527641Z","iopub.status.idle":"2024-05-09T18:26:13.733918Z","shell.execute_reply":"2024-05-09T18:26:13.732858Z"},"papermill":{"duration":0.220154,"end_time":"2024-05-09T18:26:13.73582","exception":false,"start_time":"2024-05-09T18:26:13.515666","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Accuracy Score:  0.6120739456961294\n","Cohen Kappa Score:  0.459273941302504\n"]}],"source":["y_preds = clf.predict(X_val)\n","\n","print('Accuracy Score: ', accuracy_score(y_val, y_preds))\n","print('Cohen Kappa Score: ', cohen_kappa_score(y_val, y_preds))"]},{"cell_type":"markdown","id":"caaa51a3","metadata":{"papermill":{"duration":0.01083,"end_time":"2024-05-09T18:26:13.757832","exception":false,"start_time":"2024-05-09T18:26:13.747002","status":"completed"},"tags":[]},"source":["# Predicting"]},{"cell_type":"code","execution_count":16,"id":"5cf21010","metadata":{"execution":{"iopub.execute_input":"2024-05-09T18:26:13.781462Z","iopub.status.busy":"2024-05-09T18:26:13.780632Z","iopub.status.idle":"2024-05-09T18:26:13.845558Z","shell.execute_reply":"2024-05-09T18:26:13.844833Z"},"papermill":{"duration":0.07926,"end_time":"2024-05-09T18:26:13.848089","exception":false,"start_time":"2024-05-09T18:26:13.768829","status":"completed"},"tags":[]},"outputs":[],"source":["# Predicting\n","predictions_encoded = clf.predict(X_test)\n","\n","# Inverse encoding labels\n","predictions = enc.inverse_transform(predictions_encoded)"]},{"cell_type":"markdown","id":"7b12c098","metadata":{"papermill":{"duration":0.009872,"end_time":"2024-05-09T18:26:13.8694","exception":false,"start_time":"2024-05-09T18:26:13.859528","status":"completed"},"tags":[]},"source":["# Submission"]},{"cell_type":"code","execution_count":17,"id":"d80b5302","metadata":{"execution":{"iopub.execute_input":"2024-05-09T18:26:13.893076Z","iopub.status.busy":"2024-05-09T18:26:13.892724Z","iopub.status.idle":"2024-05-09T18:26:13.902629Z","shell.execute_reply":"2024-05-09T18:26:13.901419Z"},"papermill":{"duration":0.023187,"end_time":"2024-05-09T18:26:13.90458","exception":false,"start_time":"2024-05-09T18:26:13.881393","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>essay_id</th>\n","      <th>score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>000d118</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>000fe60</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>001ab80</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  essay_id  score\n","0  000d118      3\n","1  000fe60      3\n","2  001ab80      4"]},"metadata":{},"output_type":"display_data"}],"source":["# Building submission dataframe\n","submission = pd.DataFrame({\n","    'essay_id': df_test['essay_id'],\n","    'score': predictions,\n","})\n","\n","display(submission)"]},{"cell_type":"code","execution_count":18,"id":"c479cb42","metadata":{"execution":{"iopub.execute_input":"2024-05-09T18:26:13.92692Z","iopub.status.busy":"2024-05-09T18:26:13.926586Z","iopub.status.idle":"2024-05-09T18:26:13.935255Z","shell.execute_reply":"2024-05-09T18:26:13.934423Z"},"papermill":{"duration":0.022291,"end_time":"2024-05-09T18:26:13.937455","exception":false,"start_time":"2024-05-09T18:26:13.915164","status":"completed"},"tags":[]},"outputs":[],"source":["# Export submission file\n","submission.to_csv('submission.csv', index = None)"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"databundleVersionId":8059942,"sourceId":71485,"sourceType":"competition"},{"datasetId":4971846,"sourceId":8364641,"sourceType":"datasetVersion"}],"dockerImageVersionId":30698,"isGpuEnabled":false,"isInternetEnabled":false,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":1902.503675,"end_time":"2024-05-09T18:26:14.675615","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-05-09T17:54:32.17194","version":"2.5.0"}},"nbformat":4,"nbformat_minor":5}